<controls:BusyableDialogWindow 
    x:Class="Timelapse.Dialog.PopulateFieldsWithMetadata"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:Timelapse.Controls"
    xmlns:local="clr-namespace:Timelapse.Dialog"
    mc:Ignorable="d"
    Title="Populate a data field with metadata" 
	MinHeight="600" MinWidth="768"
	Height="856" Width="840"
	ResizeMode="CanResizeWithGrip"
	ShowInTaskbar="False" 
    WindowStartupLocation="CenterOwner" 
    Loaded="Window_Loaded" Closing="Window_Closing">

    <Grid>
        <DockPanel Grid.Row="0">

            <controls:StockMessageControl x:Name="PopulateAllMessage" DockPanel.Dock="Top" 
                            Icon="Question"
                            Title="Populate Data Fields with Selected Metadata"
                            What="Images often embed metadata, some of which may be useful to capture as data.
                                          &#10;You can direct Timelapse on how to populate data fields with metadata."
                            Solution="Match the desired metadata to a data field to populate those data fields for all your currently selected files.
&#10;1. Inspect the current file's metadata (and its example value) to see if your files contain metadata of interest
&#10;2. For each metadata of interest, use the drop-down menu to select which data field should be populated with the metadata's value.                                          
&#10;3. Click the Populate button to apply your metadata selections to all your currently selected files."
                            Hint="Try both inspection tools: MetadataExtractor is faster. ExifTool is better at finding all metadata fields but much slower.
                                  &#10; Only Note fields can be populated
                                  &#10; Be patient! It does take time to do this (especially with ExifTool) if you have a large number of files."
                            Result="Each file's data fields will be populated with each file's metadata values for the metadata fields selected."
                            ShowExplanationVisibility="True" />

            <controls:StockMessageControl x:Name="DatesOnlyMessage" DockPanel.Dock="Top" Visibility="Collapsed"
                            Icon="Question"
                            Title="Read dates and times from a metadata field..."
                            What="Some files, especially videos, record its creation date/time in a metadata field unknown to Timelapse.
                                  &#10;If the Timelapse DateTime field appears wrong, see if that file contains a metadata field with the correct date to use instead."
                            Solution="Match the desired metadata to the DateTime data field to populate that field for all your currently selected files.    
&#10;1. The list below includes metadata found by MetadataExtractor (fast) vs. ExifTool (better at finding all metadata fields but 15x slower)
&#10;    Only  metadata fields that can be interpretted as containing a date and/or time are listed.
&#10;2. Scan each  metadata row to see if it contains a correct DateTime for the example file.
&#10;3. If one exists, use the drop-down menu in the Data Field column to select the DateTime data field.
&#10;4. Click the Populate button to update the DateTime for your currently selected files with the metadata value found in each file."
                             Hint="Try both inspection tools: MetadataExtractor is faster. ExifTool is better at finding all metadata fields but much slower.
                                  &#10; Be patient! It does take time to do this (especially with ExifTool) if you have a large number of files."
                            Result="Each file's DateTime field will be populated with each file's metadata value for the metadata fields selected.
                                &#10;Files missing that metadata field, or that contain an invalid date will remain unchanged."
                            ShowExplanationVisibility="True" />
            
            <DockPanel LastChildFill="True" >
                <StackPanel Orientation="Vertical" DockPanel.Dock="Top" VerticalAlignment="Stretch" Margin="10,0,10,0">
                    <Rectangle Fill="#FF868686" Height="2"></Rectangle>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                    <CheckBox x:Name="ClearIfNoMetadata"  VerticalAlignment="Center" HorizontalAlignment="Left" Padding="5,0,50,0" Margin="10,0,0,0" Checked="ClearIfNoMetadata_Checked">Clear the data field if the image file cannot be read or if it is missing that metadata field</CheckBox>
                    <Button x:Name="CancelButton" IsCancel="True" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Padding="10" Margin="10,10,10,10" Click="CancelButton_Click">_Cancel</Button>
                    <Button x:Name="StartDoneButton" IsDefault="True" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Padding="10" Margin="10,10,10,10"  IsEnabled="False" Click="Start_Click">_Populate</Button>
                </StackPanel>

                <controls:MetadataGrid x:Name="MetadataGrid"  DockPanel.Dock="Top" VerticalAlignment="Stretch"/>

                <Grid Name="FeedbackPanel" Visibility="Collapsed" DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Name="PopulatingMessage"  Text="--" 
                               Grid.Column="0" Grid.Row="0" 
                               FontWeight="Bold"
                               HorizontalAlignment="Left" Margin="10,10,10,0" />
                    <DataGrid Name="FeedbackGrid" 
                        Grid.Column="0" Grid.Row="1"
                        Margin="0,0,10,0" ColumnWidth="*" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        SelectionUnit="FullRow" SelectionMode="Single" 
                        AutoGenerateColumns="True" AutoGeneratedColumns="FeedbackDatagrid_AutoGeneratedColumns" 
                        >
                    </DataGrid>
                </Grid>
            </DockPanel>
        </DockPanel>
        <controls:BusyCancelIndicator x:Name="BusyCancelIndicator" IsBusy="False" Grid.Row="0" CancelClick="CancelAsyncOperationButton_Click"/>
    </Grid>
</controls:BusyableDialogWindow>
